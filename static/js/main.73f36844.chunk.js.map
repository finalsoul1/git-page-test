{"version":3,"sources":["imgs/bono.jpg","containers/Gnb/Gnb.js","containers/WeatherItem/WeatherItem.js","containers/GoogleMap/GoogleMap.js","containers/InputBox/InputBox.js","pages/Home/Home.js","modules/weather.js","pages/Weather/Weather.js","router/index.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["module","exports","__webpack_require__","p","menuStyle","margin","width","border","borderRadius","boxShadow","marginBottom","marginTop","transition","fixedMenuStyle","left","marginLeft","backgroundColor","Gnb","state","menuFixed","overlayFixed","activeItem","handleItemClick","e","_ref","name","_this","setState","stickTopMenu","unStickTopMenu","this","console","log","props","react_default","a","createElement","className","Visibility","onBottomPassed","onBottomVisible","once","Menu","borderless","fixed","undefined","style","Container","text","Item","header","as","NavLink","exact","to","position","Dropdown","pointing","Divider","Header","Component","WeatherItem","weatherData","city","_weatherData$city$coo","coord","lon","lat","Grid","columns","divided","Row","Column","GoogleMap","containerElement","height","mapElement","Image","src","bono","size","centered","defaultProps","loading","GoogleMapView","withGoogleMap","lib","defaultZoom","defaultCenter","lng","InputBox","inputData","inputState","option","_handleChange","target","value","_handleSubmit","_this$state","data","submit","Form","onSubmit","Field","inline","Input","location","icon","Icon","inverted","circular","link","onClick","onChange","placeholder","Home","ROOT_URL","concat","getAPI","cityName","url","axios","get","getPost","type","payload","handleActions","_handleActions","Object","defineProperty","action","objectSpread","pending","error","push","Weather","inputSelection","_fetchWeather","loadData","_changeInput","WeatherActions","_this$props","InputBox_InputBox","Radio","slider","Loader","active","weather","map","_renderWeather","id","Math","round","random","containers_WeatherItem_WeatherItem","key","connect","dispatch","bindActionCreators","weatherActions","Routes","react_router","path","component","App","updateWindowDimensions","window","innerWidth","addEventListener","removeEventListener","react_router_dom","basename","containers_Gnb_Gnb","router","Boolean","hostname","match","combineReducers","middleware","createLogger","promise","store","createStore","modules","applyMiddleware","apply","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73f36844.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bono.f2601767.jpg\";","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {\n  Container,\n  Dropdown,\n  Menu,\n  Visibility\n} from 'semantic-ui-react'\nimport './Gnb.scss'\n\nconst menuStyle = {\n  margin: '0 auto',\n  width: '700px',\n  border: 'none',\n  borderRadius: 0,\n  boxShadow: 'none',\n  marginBottom: '1em',\n  marginTop: '1em',\n  transition: 'box-shadow 0.5s ease, padding 0.5s ease'\n}\n\nconst fixedMenuStyle = {\n  // borderRadius: '40% 10px',\n  left: '50%',\n  marginLeft: '-350px',\n  width: '700px',\n  backgroundColor: '#fff',\n  border: '1px solid #ddd',\n  boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)'\n}\n\nclass Gnb extends Component {\n  state = {\n    menuFixed: false,\n    overlayFixed: false,\n    activeItem: 'bio'\n  }\n\n  render() {\n    const { menuFixed } = this.state\n\n    console.log(this.props.width)\n\n    return (\n      <div className=\"Gnb\">\n        <div className=\"mobile\">\n          <Visibility\n            onBottomPassed={this.stickTopMenu}\n            onBottomVisible={this.unStickTopMenu}\n            once={false}\n          >\n            <Menu\n              borderless\n              fixed={menuFixed ? 'top' : undefined}\n              style={menuFixed ? fixedMenuStyle : menuStyle}\n            >\n              <Container text>\n                <Menu.Item header as={NavLink} exact to=\"/\">\n                  Home\n                </Menu.Item>\n                <Menu.Item as={NavLink} to=\"/weather\">\n                  Weather\n                </Menu.Item>\n\n                <Menu.Menu position=\"right\">\n                  <Dropdown text=\"Dropdown\" pointing className=\"link item\">\n                    <Dropdown.Menu>\n                      <Dropdown.Item>List Item</Dropdown.Item>\n                      <Dropdown.Item>List Item</Dropdown.Item>\n                      <Dropdown.Divider />\n                      <Dropdown.Header>Header Item</Dropdown.Header>\n                      <Dropdown.Item>\n                        <i className=\"dropdown icon\" />\n                        <span className=\"text\">Submenu</span>\n                        <Dropdown.Menu>\n                          <Dropdown.Item>List Item</Dropdown.Item>\n                          <Dropdown.Item>List Item</Dropdown.Item>\n                        </Dropdown.Menu>\n                      </Dropdown.Item>\n                      <Dropdown.Item>List Item</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Menu.Menu>\n              </Container>\n            </Menu>\n          </Visibility>\n        </div>\n      </div>\n    )\n  }\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  stickTopMenu = () => this.setState({ menuFixed: true })\n  unStickTopMenu = () => this.setState({ menuFixed: false })\n}\n\nexport default Gnb\n","import React from 'react'\n\nimport { GoogleMapView } from 'containers'\n\nimport { Grid, Image } from 'semantic-ui-react'\nimport { bono } from 'imgs'\n\nconst WeatherItem = ({weatherData}) => {\n  console.log('웨더아이템', weatherData.city);\n  \n  const { lon, lat } = weatherData.city.coord\n\n  return (\n    <Grid columns={3} divided>\n      <Grid.Row>\n        <Grid.Column>\n          <GoogleMapView\n            lon={lon}\n            lat={lat}\n            containerElement={<div style={{ height: `100%` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <Image src={bono} size=\"small\" centered />\n        </Grid.Column>\n        <Grid.Column>\n          <Image src={bono} size=\"small\" centered />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nWeatherItem.defaultProps = {\n  loading: false,\n  weatherData: {\n    city: {\n      lon: 0,\n      lat: 0\n    }\n  }\n}\n\nexport default WeatherItem\n","import React from 'react'\nimport { withGoogleMap, GoogleMap, Marker } from 'react-google-maps'\n\nconst GoogleMapView = withGoogleMap(props => (\n  <GoogleMap defaultZoom={12} defaultCenter={{ lat: props.lat, lng: props.lon }}>\n    <Marker position={{ lat: props.lat, lng: props.lon }} />\n  </GoogleMap>\n))\n\nexport default GoogleMapView\n","import React, { Component } from 'react'\nimport { Input, Icon, Form } from 'semantic-ui-react'\n\nexport default class InputBox extends Component {\n  state = {\n    inputData: '',\n    inputState: this.props.option.inputState\n  }\n  render() {\n    const { option } = this.props\n    const { inputState } = this.state\n\n    return (\n      <Form onSubmit={this._handleSubmit}>\n        <Form.Field inline>\n          {inputState ? (\n            <Input\n              className={option.location}\n              icon={<Icon name=\"search\" inverted circular link onClick={this._handleSubmit} />}\n              onChange={this._handleChange}\n              placeholder={option.placeholder}\n              value={this.state.inputData}\n            />\n          ) : (\n            <Input\n              className={option.location}\n              icon={<Icon name=\"search\" inverted circular link onClick={this._handleSubmit} />}\n              placeholder={option.placeholder}\n            />\n          )}\n        </Form.Field>\n      </Form>\n    )\n  }\n  _handleChange = e => {\n    this.setState({\n      inputData: e.target.value\n    })\n  }\n  _handleSubmit = e => {\n    const { inputData, inputState } = this.state\n    const data = inputState ? inputData : e.target[0].value\n\n    this.props.submit(data)\n    this.setState({\n      inputData: ''\n    })\n    e.target[0].value = ''\n  }\n}\n","import React from 'react'\nimport { Image } from 'semantic-ui-react'\nimport { bono } from 'imgs'\n\nconst Home = () => {\n  return (\n    <div>\n      <h3 className='center'>홈입니다.</h3>\n      <Image src={bono} size='large' centered />\n      <Image src={bono} size='large' centered />\n      <Image src={bono} size='large' centered />\n    </div>\n  )\n}\n\nexport default Home\n","import { handleActions } from 'redux-actions'\n\nimport axios from 'axios'\n\nconst API_KEY = 'f08d761b7d293bc4a675324c7e76b042'\nconst ROOT_URL = `http://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`\n\nfunction getAPI(cityName) {\n  const url = `${ROOT_URL}&q=${cityName},kr`\n  return axios.get(url)\n}\n\nconst GET_POST = 'GET_POST'\nconst GET_POST_PENDING = 'GET_POST_PENDING'\nconst GET_POST_FULFILLED = 'GET_POST_FULFILLED'\nconst GET_POST_REJECTED = 'GET_POST_REJECTED'\n\nexport const getPost = cityName => ({\n  type: GET_POST,\n  payload: getAPI(cityName)\n})\n\nconst initialState = {\n  pending: false,\n  error: false,\n  data: []\n}\n\nexport default handleActions(\n  {\n    [GET_POST_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      }\n    },\n    [GET_POST_FULFILLED]: (state, action) => {\n      const { data } = action.payload\n      state.data.push(data)\n      return {\n        ...state,\n        pending: false\n      }\n    },\n    [GET_POST_REJECTED]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      }\n    }\n  },\n  initialState\n)\n","import React, { Component } from 'react'\nimport { WeatherItem, InputBox } from 'containers'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as weatherActions from 'modules/weather'\n\nimport { Loader, Radio, Grid } from 'semantic-ui-react'\nimport './Weather.scss'\n\nclass Weather extends Component {\n  state = {\n    cityName: '',\n    inputSelection: true\n  }\n\n  render() {\n    const { loading, error } = this.props\n    const { inputSelection } = this.state\n\n    const inputOptionLeft = {\n      location: 'left',\n      inputState: true,\n      placeholder: '도시이름입력'\n    }\n    const inputOptionRight = {\n      location: 'right',\n      inputState: false,\n      placeholder: '도시이름입력'\n    }\n\n    return (\n      <div className=\"Weather\">\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column>\n              {inputSelection ? (\n                <InputBox submit={this._fetchWeather} option={inputOptionLeft} />\n              ) : (\n                <div />\n              )}\n            </Grid.Column>\n            <Grid.Column>\n              <Radio className=\"inputSelection\" slider onChange={this._changeInput} />\n            </Grid.Column>\n            <Grid.Column>\n              {inputSelection ? (\n                <div />\n              ) : (\n                <InputBox submit={this._fetchWeather} option={inputOptionRight} />\n              )}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <br />\n        <div className=\"weatherBox\">\n          {loading ? (\n            <Loader size=\"massive\" active inline=\"centered\" />\n          ) : error ? (\n            <h2>에러</h2>\n          ) : (\n            this.props.weather.map(this._renderWeather)\n          )}\n        </div>\n      </div>\n    )\n  }\n  _handleChange = e => {\n    this.setState({\n      cityName: e.target.value\n    })\n  }\n  _fetchWeather = data => {\n    this.loadData(data)\n  }\n  _changeInput = () => {\n    this.setState({\n      inputSelection: !this.state.inputSelection\n    })\n  }\n\n  loadData = cityName => {\n    const { WeatherActions } = this.props\n    WeatherActions.getPost(cityName)\n  }\n\n  _renderWeather(weatherData) {\n    console.log(weatherData)\n    const id = Math.round(Math.random() * 100000)\n    console.log(id)\n\n    return <WeatherItem key={id} weatherData={weatherData} />\n  }\n}\nexport default connect(\n  state => ({\n    weather: state.weather.data,\n    loading: state.weather.pending,\n    error: state.weather.error\n  }),\n  dispatch => ({\n    WeatherActions: bindActionCreators(weatherActions, dispatch)\n  })\n)(Weather)\n","import React from 'react'\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom'\n\nimport { Home, Weather } from 'pages'\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/home\" component={Home} />\n      <Route exact path=\"/weather\" component={Weather} />\n    </Switch>\n  )\n}\n\nexport default Routes\n","import React, { Component } from 'react'\n\nimport { BrowserRouter } from 'react-router-dom'\nimport { Grid, Segment } from 'semantic-ui-react'\n\nimport { Gnb } from 'containers'\n\nimport Routes from 'router'\n\nimport './App.scss'\n\nclass App extends Component {\n  state = {\n    width: ''\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions()\n    window.addEventListener('resize', this.updateWindowDimensions)\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions)\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter basename=\"/git-page-test\">\n          <br/>\n          <h1 className='center' >React 연습 Page</h1>\n          <Gnb width={this.state.width} />\n          <Routes />\n        </BrowserRouter>\n      </div>\n    )\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({\n      width: window.innerWidth\n    })\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux'\nimport weather from './weather'\n\nexport default combineReducers({\n  weather\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport promise from 'redux-promise-middleware'\n\nimport modules from 'modules'\n\nconst logger = createLogger()\n\nconst middleware = [logger, promise]\n\nconst store = createStore(modules, applyMiddleware(...middleware))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}